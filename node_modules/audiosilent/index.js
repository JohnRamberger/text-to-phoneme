var merge = require('lodash.merge')
var ffmpeg = require('fluent-ffmpeg')
var version = require('../../package.json').version

module.exports = exports = function (input, opts) {
  return new Audiosilent(input, opts)
}

exports.VERSION = version
exports.ffmpeg = ffmpeg

function Audiosilent(input, opts) {
  this.input = input || ""
  this.opts = opts ||Â {}
}

Audiosilent.prototype.options = function (opts) {
  merge(this.opts, opts)
  return this
}

Audiosilent.prototype.silence = function (file) {
  if (file) {
    this.opts.output = file
  }
  return silence(this.input, this.opts)
}

function silence(input, opts) {
  var filter = input

  var renderer = ffmpeg()
    .input(filter)
    .outputOptions('-af silenceremove=start_periods=1:start_threshold=-50dB:start_mode=all:window=0.01:stop_periods=-1:stop_threshold=-50dB:stop_mode=all')

  var output = opts.output
  if (output) {
    return renderer.save(output)
  }

  return renderer
}
